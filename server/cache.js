// Generated by CoffeeScript 1.7.1
(function() {
  var cache, config, db, ga, redis, rsvp;

  redis = require('redis');

  rsvp = require("rsvp");

  ga = require('./ga');

  config = require("./config");

  cache = {};

  cache.fetch = function(key) {
    return new rsvp.Promise(function(resolve, reject) {
      return db.exists(key, function(err, res) {
        if (err) {
          console.log("ERROR: redis - db.exists(" + key + ") - " + err);
          reject(err);
        } else if (res === 1) {
          console.log("INFO: cached / fetching [" + key + "] from cache.");
          db.get(key, function(err, res) {
            if (err) {
              console.log("ERROR: redis - db.get(" + key + ") - " + err);
              reject(err);
            } else {
              resolve(JSON.parse(res));
            }
          });
        } else {
          console.log("INFO: not cached / fetching [" + key + "] from GA.");
          return ga.authPromise.then(ga.fetch(key)).then(function(data) {
            db.set(key, JSON.stringify(data));
            resolve(data);
          })["catch"](function(err) {
            console.log("ERROR: ", err);
          });
        }
      });
    });
  };

  cache.init = function() {
    ga.validQueryTypes.forEach(function(key) {
      db.del(key);
    });
    console.log("SUCCESS: Connected to Redis.");
    ga.validQueryTypes.forEach(function(key) {
      cache.fetch(key);
    });
  };

  db = redis.createClient(config.db.socket);

  db.on("connect", cache.init);

  db.on("error", function(err) {
    console.log(err);
  });

  module.exports = cache;

}).call(this);

//# sourceMappingURL=cache.map
